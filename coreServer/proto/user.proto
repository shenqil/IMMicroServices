syntax = "proto3";

import "google/protobuf/timestamp.proto";


option go_package = "./proto;pb";
package userPB;
import "common.proto";

// User 用户对象
message User {
  string ID = 1;                                      // 唯一标识
  string UserName = 2;                                // 用户名
  string RealName = 3;                                // 真实姓名
  string Password = 4;                                // 密码
  string Avatar = 5;                                  // 头像
  string Phone = 6;                                   // 手机号
  string  Email = 7;                                  // 邮箱
  int32 Status = 8 ;                                  // 用户状态(1:启用 2:停用)
  string Creator = 9;                                 // 创建者
  google.protobuf.Timestamp CreatedAt = 10;           // 创建时间
}

// UserQueryParam 查询条件
message UserQueryParam {
  commonPB.PaginationParam PaginationParam = 1;
  string UserName = 2;                // 用户名
  string QueryValue = 3;              // 模糊查询
  int32  Status = 4;                  // 用户状态(1:启用 2:停用)
  string  PreciseSearch = 5;          // 精确查询查询
  repeated string UserIDs = 6;        // 用户ID列表
}

// UserQueryOptions 用户对象查询可选参数项
message UserQueryOptions {
  repeated commonPB.OrderField OrderFields = 1; // 排序字段
}

// UserQueryRequest 查询参数
message UserQueryRequest {
  UserQueryParam Params = 1;
  UserQueryOptions Options = 2;
}

message UserGetRequest {
  string ID = 1;
}

message UserDeleteRequest {
  string ID = 1;
}

message UserUpdateStatusRequest {
  string ID = 1;
  int32 Status = 2;
}

message UserUpdatePasswordRequest {
  string ID = 1;
  string Password = 2;
}

message UserVerifyRequest{
  string UserName = 1;
  string Password = 2;
  bool IsRoot = 3;
}

// UserQueryResult 用户查询结果
message UserQueryResult {
  repeated User Data = 1;
  commonPB.PaginationResult PageResult = 2;
}

service UserGreeter {
  rpc Query (UserQueryRequest) returns (UserQueryResult) {}                         // 查询数据
  rpc Get (UserGetRequest) returns (User) {}                                        // 查询指定数据
  rpc Create (User) returns (commonPB.IDResult);                                    // 创建数据
  rpc Update (User) returns (commonPB.StatusResult);                                // 更新数据
  rpc Delete (UserDeleteRequest) returns (commonPB.StatusResult);                   // 删除数据
  rpc UpdateStatus (UserUpdateStatusRequest) returns (commonPB.StatusResult);       // 更新状态
  rpc UpdatePassword(UserUpdatePasswordRequest) returns (commonPB.StatusResult);    // 更新密码
  rpc Verify(UserVerifyRequest)returns (commonPB.StatusResult);                     // 验证用户
}